/*
Deployment script for HRProfile

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HRProfile"
:setvar DefaultFilePrefix "HRProfile"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Dropping Default Constraint [Master].[DC_UserRole_ActiveFlag]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [DC_UserRole_ActiveFlag];


GO
PRINT N'Dropping Default Constraint [Master].[DC_UserRole_ModifiedTimeStamp]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [DC_UserRole_ModifiedTimeStamp];


GO
PRINT N'Dropping Foreign Key [Master].[FK_Role_UserRole_RoleID]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [FK_Role_UserRole_RoleID];


GO
PRINT N'Dropping Foreign Key [Master].[FK_User_UserRole_UserID]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [FK_User_UserRole_UserID];


GO
PRINT N'Starting rebuilding table [Master].[UserRole]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Master].[tmp_ms_xx_UserRole] (
    [UserID]            INT            NOT NULL,
    [RoleID]            INT            NOT NULL,
    [ActiveFlag]        BIT            CONSTRAINT [DC_UserRole_ActiveFlag] DEFAULT (1) NOT NULL,
    [CreatedBy]         NVARCHAR (200) NOT NULL,
    [CreatedTimestamp]  DATETIME       NOT NULL,
    [ModifiedBy]        NVARCHAR (200) NULL,
    [ModifiedTimestamp] DATETIME       CONSTRAINT [DC_UserRole_ModifiedTimeStamp] DEFAULT (GETUTCDATE()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserRole_UserID_RoleID1] PRIMARY KEY CLUSTERED ([UserID] ASC, [RoleID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Master].[UserRole])
    BEGIN
        INSERT INTO [Master].[tmp_ms_xx_UserRole] ([UserID], [RoleID], [ActiveFlag], [CreatedBy], [CreatedTimestamp], [ModifiedBy], [ModifiedTimestamp])
        SELECT   [UserID],
                 [RoleID],
                 [ActiveFlag],
                 [CreatedBy],
                 [CreatedTimestamp],
                 [ModifiedBy],
                 [ModifiedTimestamp]
        FROM     [Master].[UserRole]
        ORDER BY [UserID] ASC, [RoleID] ASC;
    END

DROP TABLE [Master].[UserRole];

EXECUTE sp_rename N'[Master].[tmp_ms_xx_UserRole]', N'UserRole';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_PK_UserRole_UserID_RoleID1]', N'PK_UserRole_UserID_RoleID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [Master].[FK_Role_UserRole_RoleID]...';


GO
ALTER TABLE [Master].[UserRole] WITH NOCHECK
    ADD CONSTRAINT [FK_Role_UserRole_RoleID] FOREIGN KEY ([RoleID]) REFERENCES [Master].[Role] ([RoleID]);


GO
PRINT N'Creating Foreign Key [Master].[FK_User_UserRole_UserID]...';


GO
ALTER TABLE [Master].[UserRole] WITH NOCHECK
    ADD CONSTRAINT [FK_User_UserRole_UserID] FOREIGN KEY ([UserID]) REFERENCES [Master].[User] ([UserID]);


GO
-- Load users along with their roles
SELECT EmailID, FirstName, LastName, RoleName, RoleCode INTO #UserRole FROM 
(SELECT 'nasruldeen.anua@petronas.com.my' EmailID, 'Nasruldeen' FirstName, 'Anuar' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'sitimarina.abdrahi@petronas.com.my' EmailID, 'Siti' FirstName, 'Marina' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'linaarina.mohamadaf@petronas.com.my' EmailID, 'Lina' FirstName, 'Arina' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'mfathullah.amiruddin@petronas.com.my' EmailID, 'M Fathullah' FirstName, 'Amiruddin' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'ainakhalishah.murshi@petronas.com.my' EmailID, 'Aina' FirstName, 'Khalishah' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'danielakmal.anuar@petronas.com.my' EmailID, 'Daniel' FirstName, 'Akmal' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'nursyakirah.zainal@petronas.com.my' EmailID, 'Nursyakirah' FirstName, 'Zainal' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'hazilah_alba@petronas.com.my' EmailID, 'Hazilah' FirstName, 'Alba' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'atikah.mohamaalimoh@petronas.com.my' EmailID, 'Atikah' FirstName, 'Mohama Ali' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'sitimarina.abdrahi@petronas.com.my' EmailID, 'Siti' FirstName, 'Marina' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'linaarina.mohamadaf@petronas.com.my' EmailID, 'Lina' FirstName, 'Arina' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'anand.karuppaiah@petronas.com' EmailID, 'Anandaraju' FirstName, 'Karuppaiah' LastName, 'Technical Support' RoleName, 'TechnicalSupport' RoleCode UNION ALL
SELECT 'haniyasmin.zaki@petronas.com' EmailID, 'Hani' FirstName, 'Zaki' LastName, 'Technical Support' RoleName, 'TechnicalSupport' RoleCode UNION ALL
SELECT 'noorhidayah.hashim@petronas.com' EmailID, 'Noor' FirstName, 'Hidayah' LastName, 'Technical Support' RoleName, 'TechnicalSupport' RoleCode) A

-- Insert user(s)
INSERT INTO [Master].[User] 
(
	EmailID,
	FirstName,
	LastName,
	CreatedBy,
	CreatedTimestamp,
	ModifiedBy,
	ModifiedTimestamp
)
SELECT DISTINCT
	A.EmailID,
	A.FirstName,
	A.LastName,
	'Admin',
	GETUTCDATE(),
	'Admin',
	GETUTCDATE()
FROM #UserRole A
LEFT JOIN [Master].[User] B ON B.EmailID = A.EmailID
WHERE B.UserID IS NULL

-- Insert role(s)
INSERT INTO [Master].[Role] 
(
	RoleName,
	RoleCode,
	CreatedBy,
	CreatedTimestamp,
	ModifiedBy,
	ModifiedTimestamp
)
SELECT DISTINCT
	A.RoleName,
	A.RoleCode,
	'Admin',
	GETUTCDATE(),
	'Admin',
	GETUTCDATE()
FROM #UserRole A
LEFT JOIN [Master].[Role] B ON B.RoleCode = A.RoleCode
WHERE B.RoleID IS NULL

-- Insert user-role(s)
INSERT INTO [Master].[UserRole] 
(
	UserID,
	RoleID,
	CreatedBy,
	CreatedTimestamp,
	ModifiedBy,
	ModifiedTimestamp
)
SELECT 
	B.UserID,
	C.RoleID,
	'Admin',
	GETUTCDATE(),
	'Admin',
	GETUTCDATE()
FROM #UserRole A
INNER JOIN [Master].[User] B ON B.EmailID = A.EmailID
INNER JOIN [Master].[Role] C ON C.RoleCode = A.RoleCode
LEFT JOIN [Master].[UserRole] D ON D.UserID = B.UserID AND D.RoleID = C.RoleID
WHERE D.UserID IS NULL
GO

GO
