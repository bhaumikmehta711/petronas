/*
Deployment script for HRProfile

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HRProfile"
:setvar DefaultFilePrefix "HRProfile"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Dropping Default Constraint [Master].[DC_EmailTemplate_ActiveFlag]...';


GO
ALTER TABLE [Master].[EmailTemplate] DROP CONSTRAINT [DC_EmailTemplate_ActiveFlag];


GO
PRINT N'Dropping Default Constraint [Master].[DC_EmailTemplate_ModifiedTimeStamp]...';


GO
ALTER TABLE [Master].[EmailTemplate] DROP CONSTRAINT [DC_EmailTemplate_ModifiedTimeStamp];


GO
PRINT N'Dropping Default Constraint [Master].[DC_Role_ActiveFlag]...';


GO
ALTER TABLE [Master].[Role] DROP CONSTRAINT [DC_Role_ActiveFlag];


GO
PRINT N'Dropping Default Constraint [Master].[DC_Role_ModifiedTimeStamp]...';


GO
ALTER TABLE [Master].[Role] DROP CONSTRAINT [DC_Role_ModifiedTimeStamp];


GO
PRINT N'Dropping Default Constraint [Master].[DC_User_ActiveFlag]...';


GO
ALTER TABLE [Master].[User] DROP CONSTRAINT [DC_User_ActiveFlag];


GO
PRINT N'Dropping Default Constraint [Master].[DC_User_ModifiedTimeStamp]...';


GO
ALTER TABLE [Master].[User] DROP CONSTRAINT [DC_User_ModifiedTimeStamp];


GO
PRINT N'Dropping Default Constraint [Master].[DC_UserRole_ActiveFlag]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [DC_UserRole_ActiveFlag];


GO
PRINT N'Dropping Default Constraint [Master].[DC_UserRole_ModifiedTimeStamp]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [DC_UserRole_ModifiedTimeStamp];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Batch_SPUR_BatchID]...';


GO
ALTER TABLE [dbo].[SPUR] DROP CONSTRAINT [FK_Batch_SPUR_BatchID];


GO
PRINT N'Dropping Foreign Key [Master].[FK_Role_UserRole_RoleID]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [FK_Role_UserRole_RoleID];


GO
PRINT N'Dropping Foreign Key [Master].[FK_User_UserRole_UserID]...';


GO
ALTER TABLE [Master].[UserRole] DROP CONSTRAINT [FK_User_UserRole_UserID];


GO
PRINT N'Starting rebuilding table [dbo].[Batch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Batch] (
    [BatchID]                      INT            IDENTITY (1, 1) NOT NULL,
    [BatchName]                    VARCHAR (50)   NOT NULL,
    [SubmittedBy]                  NVARCHAR (200) NOT NULL,
    [SubmittedTimeStamp]           DATETIME       NOT NULL,
    [BatchType]                    VARCHAR (25)   NOT NULL,
    [EndUserCreatedBy]             NVARCHAR (200) NULL,
    [EndUserCreatedTimestamp]      DATETIME       NULL,
    [EndUserModifiedBy]            NVARCHAR (200) NULL,
    [EndUserModifiedTimestamp]     DATETIME       NULL,
    [BackendUserModifiedBy]        NVARCHAR (200) NULL,
    [BackendUserModifiedTimestamp] DATETIME       NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Batch_BatchID1] PRIMARY KEY CLUSTERED ([BatchID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Batch])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Batch] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Batch] ([BatchID], [BatchName], [SubmittedBy], [SubmittedTimeStamp], [BatchType], [EndUserCreatedBy], [EndUserCreatedTimestamp], [EndUserModifiedBy], [EndUserModifiedTimestamp], [BackendUserModifiedBy], [BackendUserModifiedTimestamp])
        SELECT   [BatchID],
                 [BatchName],
                 [SubmittedBy],
                 [SubmittedTimeStamp],
                 [BatchType],
                 [EndUserCreatedBy],
                 [EndUserCreatedTimestamp],
                 [EndUserModifiedBy],
                 [EndUserModifiedTimestamp],
                 [BackendUserModifiedBy],
                 [BackendUserModifiedTimestamp]
        FROM     [dbo].[Batch]
        ORDER BY [BatchID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Batch] OFF;
    END

DROP TABLE [dbo].[Batch];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Batch]', N'Batch';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Batch_BatchID1]', N'PK_Batch_BatchID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[SPUR]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SPUR] (
    [SPURID]                          INT            IDENTITY (1, 1) NOT NULL,
    [SPURName]                        VARCHAR (100)  NOT NULL,
    [JobCOde]                         VARCHAR (50)   NULL,
    [EffectiveStartDate]              DATETIME       NULL,
    [EffectiveEndDate]                DATETIME       NULL,
    [RoleLevel]                       VARCHAR (100)  NULL,
    [MinimumExperienceRequiredInYear] NUMERIC (3, 2) NULL,
    [DesiredExperienceInYear]         NUMERIC (3, 2) NULL,
    [Industry]                        VARCHAR (100)  NULL,
    [Domain]                          VARCHAR (100)  NULL,
    [ContentItem]                     VARCHAR (100)  NULL,
    [AreaOfStudy]                     VARCHAR (100)  NULL,
    [OtherAreaOfStudy]                VARCHAR (100)  NULL,
    [LicenseAndCertificate]           VARCHAR (100)  NULL,
    [OtherLicnseAndCertificate]       VARCHAR (100)  NULL,
    [Membership]                      VARCHAR (100)  NULL,
    [OtherMembership]                 VARCHAR (100)  NULL,
    [Status]                          VARCHAR (20)   NULL,
    [BatchID]                         INT            NULL,
    [ApproverEmailID]                 NVARCHAR (200) NULL,
    [ActiveFlag]                      BIT            NULL,
    [SubmittedTimeStamp]              DATETIME       NULL,
    [EndUserCreatedBy]                NVARCHAR (200) NULL,
    [EndUserCreatedTimestamp]         DATETIME       NULL,
    [EndUserModifiedBy]               NVARCHAR (200) NULL,
    [EndUserModifiedTimestamp]        DATETIME       NULL,
    [BackendUserModifiedBy]           NVARCHAR (200) NULL,
    [BackendUserModifiedTimestamp]    DATETIME       NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SPUR_SPURID1] PRIMARY KEY CLUSTERED ([SPURID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SPUR])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SPUR] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SPUR] ([SPURID], [SPURName], [JobCOde], [EffectiveStartDate], [EffectiveEndDate], [RoleLevel], [MinimumExperienceRequiredInYear], [DesiredExperienceInYear], [Industry], [Domain], [ContentItem], [AreaOfStudy], [OtherAreaOfStudy], [LicenseAndCertificate], [OtherLicnseAndCertificate], [Membership], [OtherMembership], [Status], [BatchID], [ApproverEmailID], [ActiveFlag], [SubmittedTimeStamp], [EndUserCreatedBy], [EndUserCreatedTimestamp], [EndUserModifiedBy], [EndUserModifiedTimestamp], [BackendUserModifiedBy], [BackendUserModifiedTimestamp])
        SELECT   [SPURID],
                 [SPURName],
                 [JobCOde],
                 [EffectiveStartDate],
                 [EffectiveEndDate],
                 [RoleLevel],
                 [MinimumExperienceRequiredInYear],
                 [DesiredExperienceInYear],
                 [Industry],
                 [Domain],
                 [ContentItem],
                 [AreaOfStudy],
                 [OtherAreaOfStudy],
                 [LicenseAndCertificate],
                 [OtherLicnseAndCertificate],
                 [Membership],
                 [OtherMembership],
                 [Status],
                 [BatchID],
                 [ApproverEmailID],
                 [ActiveFlag],
                 [SubmittedTimeStamp],
                 [EndUserCreatedBy],
                 [EndUserCreatedTimestamp],
                 [EndUserModifiedBy],
                 [EndUserModifiedTimestamp],
                 [BackendUserModifiedBy],
                 [BackendUserModifiedTimestamp]
        FROM     [dbo].[SPUR]
        ORDER BY [SPURID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SPUR] OFF;
    END

DROP TABLE [dbo].[SPUR];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SPUR]', N'SPUR';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SPUR_SPURID1]', N'PK_SPUR_SPURID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [Master].[EmailTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Master].[tmp_ms_xx_EmailTemplate] (
    [EmailTemplateID]   INT             IDENTITY (1, 1) NOT NULL,
    [EmailTemplateName] VARCHAR (50)    NOT NULL,
    [EmailTemplateCode] VARCHAR (20)    NOT NULL,
    [EmailSubject]      NVARCHAR (1000) NOT NULL,
    [EmailBody]         NVARCHAR (MAX)  NOT NULL,
    [EmailSeverity]     VARCHAR (20)    NULL,
    [ActiveFlag]        BIT             CONSTRAINT [DC_EmailTemplate_ActiveFlag] DEFAULT (1) NOT NULL,
    [CreatedBy]         NVARCHAR (200)  NOT NULL,
    [CreatedTimestamp]  DATETIME        NOT NULL,
    [ModifiedBy]        NVARCHAR (200)  NULL,
    [ModifiedTimestamp] DATETIME        CONSTRAINT [DC_EmailTemplate_ModifiedTimeStamp] DEFAULT (GETUTCDATE()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_EmailTemplate_UserID1] PRIMARY KEY CLUSTERED ([EmailTemplateID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UC_EmailTemplate_EmailTemplateCode1] UNIQUE NONCLUSTERED ([EmailTemplateCode] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Master].[EmailTemplate])
    BEGIN
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_EmailTemplate] ON;
        INSERT INTO [Master].[tmp_ms_xx_EmailTemplate] ([EmailTemplateID], [EmailTemplateName], [EmailTemplateCode], [EmailSubject], [EmailBody], [EmailSeverity], [ActiveFlag], [CreatedBy], [CreatedTimestamp], [ModifiedBy], [ModifiedTimestamp])
        SELECT   [EmailTemplateID],
                 [EmailTemplateName],
                 [EmailTemplateCode],
                 [EmailSubject],
                 [EmailBody],
                 [EmailSeverity],
                 [ActiveFlag],
                 [CreatedBy],
                 [CreatedTimestamp],
                 [ModifiedBy],
                 [ModifiedTimestamp]
        FROM     [Master].[EmailTemplate]
        ORDER BY [EmailTemplateID] ASC;
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_EmailTemplate] OFF;
    END

DROP TABLE [Master].[EmailTemplate];

EXECUTE sp_rename N'[Master].[tmp_ms_xx_EmailTemplate]', N'EmailTemplate';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_PK_EmailTemplate_UserID1]', N'PK_EmailTemplate_UserID', N'OBJECT';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_UC_EmailTemplate_EmailTemplateCode1]', N'UC_EmailTemplate_EmailTemplateCode', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [Master].[Role]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Master].[tmp_ms_xx_Role] (
    [RoleID]            INT            IDENTITY (1, 1) NOT NULL,
    [RoleName]          VARCHAR (50)   NOT NULL,
    [RoleCode]          VARCHAR (20)   NOT NULL,
    [ActiveFlag]        BIT            CONSTRAINT [DC_Role_ActiveFlag] DEFAULT (1) NOT NULL,
    [CreatedBy]         NVARCHAR (200) NOT NULL,
    [CreatedTimestamp]  DATETIME       NOT NULL,
    [ModifiedBy]        NVARCHAR (200) NULL,
    [ModifiedTimestamp] DATETIME       CONSTRAINT [DC_Role_ModifiedTimeStamp] DEFAULT (GETUTCDATE()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Role_RoleID1] PRIMARY KEY CLUSTERED ([RoleID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UC_Role_RoleCode1] UNIQUE NONCLUSTERED ([RoleCode] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Master].[Role])
    BEGIN
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_Role] ON;
        INSERT INTO [Master].[tmp_ms_xx_Role] ([RoleID], [RoleName], [RoleCode], [ActiveFlag], [CreatedBy], [CreatedTimestamp], [ModifiedBy], [ModifiedTimestamp])
        SELECT   [RoleID],
                 [RoleName],
                 [RoleCode],
                 [ActiveFlag],
                 [CreatedBy],
                 [CreatedTimestamp],
                 [ModifiedBy],
                 [ModifiedTimestamp]
        FROM     [Master].[Role]
        ORDER BY [RoleID] ASC;
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_Role] OFF;
    END

DROP TABLE [Master].[Role];

EXECUTE sp_rename N'[Master].[tmp_ms_xx_Role]', N'Role';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_PK_Role_RoleID1]', N'PK_Role_RoleID', N'OBJECT';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_UC_Role_RoleCode1]', N'UC_Role_RoleCode', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [Master].[User]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Master].[tmp_ms_xx_User] (
    [UserID]            INT            IDENTITY (1, 1) NOT NULL,
    [EmailID]           NVARCHAR (200) NOT NULL,
    [FirstName]         NVARCHAR (50)  NOT NULL,
    [LastName]          NVARCHAR (50)  NOT NULL,
    [ActiveFlag]        BIT            CONSTRAINT [DC_User_ActiveFlag] DEFAULT (1) NOT NULL,
    [CreatedBy]         NVARCHAR (200) NOT NULL,
    [CreatedTimestamp]  DATETIME       NOT NULL,
    [ModifiedBy]        NVARCHAR (200) NULL,
    [ModifiedTimestamp] DATETIME       CONSTRAINT [DC_User_ModifiedTimeStamp] DEFAULT (GETUTCDATE()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_User_UserID1] PRIMARY KEY CLUSTERED ([UserID] ASC),
    CONSTRAINT [tmp_ms_xx_constraint_UC_User_EmailID1] UNIQUE NONCLUSTERED ([EmailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Master].[User])
    BEGIN
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_User] ON;
        INSERT INTO [Master].[tmp_ms_xx_User] ([UserID], [EmailID], [FirstName], [LastName], [ActiveFlag], [CreatedBy], [CreatedTimestamp], [ModifiedBy], [ModifiedTimestamp])
        SELECT   [UserID],
                 [EmailID],
                 [FirstName],
                 [LastName],
                 [ActiveFlag],
                 [CreatedBy],
                 [CreatedTimestamp],
                 [ModifiedBy],
                 [ModifiedTimestamp]
        FROM     [Master].[User]
        ORDER BY [UserID] ASC;
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_User] OFF;
    END

DROP TABLE [Master].[User];

EXECUTE sp_rename N'[Master].[tmp_ms_xx_User]', N'User';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_PK_User_UserID1]', N'PK_User_UserID', N'OBJECT';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_UC_User_EmailID1]', N'UC_User_EmailID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [Master].[UserRole]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [Master].[tmp_ms_xx_UserRole] (
    [UserID]            INT            IDENTITY (1, 1) NOT NULL,
    [RoleID]            INT            NOT NULL,
    [ActiveFlag]        BIT            CONSTRAINT [DC_UserRole_ActiveFlag] DEFAULT (1) NOT NULL,
    [CreatedBy]         NVARCHAR (200) NOT NULL,
    [CreatedTimestamp]  DATETIME       NOT NULL,
    [ModifiedBy]        NVARCHAR (200) NULL,
    [ModifiedTimestamp] DATETIME       CONSTRAINT [DC_UserRole_ModifiedTimeStamp] DEFAULT (GETUTCDATE()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserRole_UserID_RoleID1] PRIMARY KEY CLUSTERED ([UserID] ASC, [RoleID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [Master].[UserRole])
    BEGIN
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_UserRole] ON;
        INSERT INTO [Master].[tmp_ms_xx_UserRole] ([UserID], [RoleID], [ActiveFlag], [CreatedBy], [CreatedTimestamp], [ModifiedBy], [ModifiedTimestamp])
        SELECT   [UserID],
                 [RoleID],
                 [ActiveFlag],
                 [CreatedBy],
                 [CreatedTimestamp],
                 [ModifiedBy],
                 [ModifiedTimestamp]
        FROM     [Master].[UserRole]
        ORDER BY [UserID] ASC, [RoleID] ASC;
        SET IDENTITY_INSERT [Master].[tmp_ms_xx_UserRole] OFF;
    END

DROP TABLE [Master].[UserRole];

EXECUTE sp_rename N'[Master].[tmp_ms_xx_UserRole]', N'UserRole';

EXECUTE sp_rename N'[Master].[tmp_ms_xx_constraint_PK_UserRole_UserID_RoleID1]', N'PK_UserRole_UserID_RoleID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Batch_SPUR_BatchID]...';


GO
ALTER TABLE [dbo].[SPUR] WITH NOCHECK
    ADD CONSTRAINT [FK_Batch_SPUR_BatchID] FOREIGN KEY ([BatchID]) REFERENCES [dbo].[Batch] ([BatchID]);


GO
PRINT N'Creating Foreign Key [Master].[FK_Role_UserRole_RoleID]...';


GO
ALTER TABLE [Master].[UserRole] WITH NOCHECK
    ADD CONSTRAINT [FK_Role_UserRole_RoleID] FOREIGN KEY ([RoleID]) REFERENCES [Master].[Role] ([RoleID]);


GO
PRINT N'Creating Foreign Key [Master].[FK_User_UserRole_UserID]...';


GO
ALTER TABLE [Master].[UserRole] WITH NOCHECK
    ADD CONSTRAINT [FK_User_UserRole_UserID] FOREIGN KEY ([UserID]) REFERENCES [Master].[User] ([UserID]);


GO

-- Load users along with their roles
SELECT EmailID, FirstName, LastName INTO #UserRole FROM 
(SELECT 'nasruldeen.anua@petronas.com.my' EmailID, 'Nasruldeen' FirstName, 'Anuar' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'sitimarina.abdrahi@petronas.com.my' EmailID, 'Siti' FirstName, 'Marina' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'linaarina.mohamadaf@petronas.com.my' EmailID, 'Lina' FirstName, 'Arina' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'mfathullah.amiruddin@petronas.com.my' EmailID, 'M Fathullah' FirstName, 'Amiruddin' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'ainakhalishah.murshi@petronas.com.my' EmailID, 'Aina' FirstName, 'Khalishah' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'danielakmal.anuar@petronas.com.my' EmailID, 'Daniel' FirstName, 'Akmal' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'nursyakirah.zainal@petronas.com.my' EmailID, 'Nursyakirah' FirstName, 'Zainal' LastName, 'Requestor' RoleName, 'Requestor' RoleCode UNION ALL
SELECT 'hazilah_alba@petronas.com.my' EmailID, 'Hazilah' FirstName, 'Alba' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'atikah.mohamaalimoh@petronas.com.my' EmailID, 'Atikah' FirstName, 'Mohama Ali' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'sitimarina.abdrahi@petronas.com.my' EmailID, 'Siti' FirstName, 'Marina' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'linaarina.mohamadaf@petronas.com.my' EmailID, 'Lina' FirstName, 'Arina' LastName, 'Approver' RoleName, 'Approver' RoleCode UNION ALL
SELECT 'anand.karuppaiah@petronas.com' EmailID, 'Anandaraju' FirstName, 'Karuppaiah' LastName, 'Technical Support' RoleName, 'TechnicalSupport' RoleCode UNION ALL
SELECT 'haniyasmin.zaki@petronas.com' EmailID, 'Hani' FirstName, 'Zaki' LastName, 'Technical Support' RoleName, 'TechnicalSupport' RoleCode UNION ALL
SELECT 'noorhidayah.hashim@petronas.com' EmailID, 'Noor' FirstName, 'Hidayah' LastName, 'Technical Support' RoleName, 'TechnicalSupport' RoleCode) A

-- Insert user(s)
INSERT INTO [Master].[User] 
(
	EmailID,
	FirstName,
	LastName
)
SELECT DISTINCT
	EmailID,
	FirstName,
	LastName
FROM #UserRole

-- Insert role(s)
INSERT INTO [Master].[Role] 
(
	RoleName,
	RoleCode
)
SELECT DISTINCT
	RoleName,
	RoleCode
FROM #UserRole

-- Insert user-role(s)
INSERT INTO [dbo].[UserRole] 
(
	UserID,
	RoleID
)
SELECT 
	UserID,
	RoleID
FROM #UserRole A
INNER JOIN [Master].[User] B ON B.EmailID = A.EmailID
INNER JOIN [Master].[Role] C ON C.RoleCode = A.RoleCode
	





GO

GO
